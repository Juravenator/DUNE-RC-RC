# consul installation docs:
# https://learn.hashicorp.com/tutorials/consul/deployment-guide?in=consul/production-deploy
# nomad installation docs:
# https://learn.hashicorp.com/tutorials/nomad/clustering?in=nomad/manage-clusters

- hosts: all
  tasks:
  - name: yum
    vars:
      # yum-python bindings are not python3 compatible
      ansible_python_interpreter: /usr/bin/python2
    yum:
      name:
      - unzip
      - iproute
      state: present
  - name: download consul
    get_url:
      url: https://releases.hashicorp.com/consul/1.9.3/consul_1.9.3_linux_amd64.zip
      dest: /tmp/consul.zip
    register: consul_zip

  - name: install consul
    unarchive:
      src: /tmp/consul.zip
      dest: /usr/bin
      copy: no
    when: consul_zip.changed

  - name: copy consul CA cert
    copy:
      src: consul/consul-agent-ca.pem
      dest: /etc/consul.d/
  
  - name: copy generic consul config
    copy:
      src: consul/consul.hcl
      dest: /etc/consul.d/

- hosts: raft_servers
  tasks:
  - name: copy consul server keys
    copy:
      src: consul/dune-rc-server-consul-{{ inventory_hostname | regex_replace('dune-rc-march-raft-', '') }}-key.pem
      dest: /etc/consul.d/consul-key.pem
  - name: copy consul server certs
    copy:
      src: consul/dune-rc-server-consul-{{ inventory_hostname | regex_replace('dune-rc-march-raft-', '') }}.pem
      dest: /etc/consul.d/consul.pem
  - name: copy consul server config
    template:
      src: consul/server.hcl.template
      dest: /etc/consul.d/server.hcl

- hosts: all:!raft_servers
  tasks:
  - name: copy consul client keys
    copy:
      src: consul/dune-rc-client-consul-{{ inventory_hostname | regex_replace('dune-rc-march-', '') }}-key.pem
      dest: /etc/consul.d/consul-key.pem
  - name: copy consul client certs
    copy:
      src: consul/dune-rc-client-consul-{{ inventory_hostname | regex_replace('dune-rc-march-', '') }}.pem
      dest: /etc/consul.d/consul.pem

- hosts: all
  tasks:
  - name: check if consul is running
    shell: "pgrep consul"
    register: consul_running
    failed_when: consul_running.rc > 1
    changed_when: consul_running.rc == 1
  
  - name: start consul
    when: consul_running.rc == 1
    shell: nohup /usr/bin/consul agent -config-dir=/etc/consul.d/ </dev/null >/dev/null 2>&1 &

  - name: wait until consul healthy
    shell: consul members | wc -l
    register: consul_members
    until: consul_members.stdout == "10"
    changed_when: False
    retries: 90
    delay: 1

  - name: download nomad
    get_url:
      url: https://releases.hashicorp.com/nomad/1.0.3/nomad_1.0.3_linux_amd64.zip
      dest: /tmp/nomad.zip
    register: nomad_zip

  - name: install nomad
    unarchive:
      src: /tmp/nomad.zip
      dest: /usr/bin
      copy: no
    when: nomad_zip.changed
  - name: make nomad config directory
    file:
      path: /etc/nomad.d
      state: directory


- hosts: raft_servers
  tasks:
  - name: copy nomad server config
    template:
      src: nomad/server.hcl.template
      dest: /etc/nomad.d/config.hcl


- hosts: all:!raft_servers
  tasks:
  - name: copy nomad client config
    template:
      src: nomad/client.hcl.template
      dest: /etc/nomad.d/config.hcl

- hosts: all
  tasks:
  - name: check if nomad is running
    shell: "pgrep nomad"
    register: nomad_running
    failed_when: nomad_running.rc > 1
    changed_when: nomad_running.rc == 1
  
  - name: start nomad
    when: nomad_running.rc == 1
    shell: nohup /usr/bin/nomad agent -config=/etc/nomad.d/config.hcl </dev/null >/dev/null 2>&1 &

- hosts: controllers_host
  tasks:
  - name: make ccm install directory
    file:
      path: /opt/dune/ccm-rc
      state: directory
  - name: install controllers
    register: controllers
    synchronize:
      src: ../controllers
      dest: /opt/dune/ccm-rc
  - name: stop daq-application-manager
    when: controllers.changed
    shell: nomad stop daq-application-manager || true
  - name: start daq-application-manager
    shell: nomad job run /opt/dune/ccm-rc/controllers/daq-app-manager/nomad.hcl
    changed_when: False
