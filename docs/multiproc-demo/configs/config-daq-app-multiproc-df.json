{
  "meta": {
    "kind": "daq-config",
    "name": "daq-app-multiproc-df"
  },
  "spec": {
    "template": "[\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"trigger_decision_from_netq\",\n                                \"name\": \"output\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"ntoq_trigdec\",\n                    \"plugin\": \"NetworkToQueue\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"token_q\",\n                                \"name\": \"input\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"qton_token\",\n                    \"plugin\": \"QueueToNetwork\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"time_sync_q\",\n                                \"name\": \"input\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"qton_timesync\",\n                    \"plugin\": \"QueueToNetwork\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"trigger_decision_from_netq\",\n                                \"name\": \"trigger_decision_input_queue\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"trigger_decision_copy_for_bookkeeping\",\n                                \"name\": \"trigger_decision_for_event_building\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"data_requests_0\",\n                                \"name\": \"data_request_0_output_queue\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"data_requests_1\",\n                                \"name\": \"data_request_1_output_queue\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"rqg\",\n                    \"plugin\": \"RequestGenerator\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"trigger_decision_copy_for_bookkeeping\",\n                                \"name\": \"trigger_decision_input_queue\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"trigger_record_q\",\n                                \"name\": \"trigger_record_output_queue\"\n                            },\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"data_fragments_q\",\n                                \"name\": \"data_fragment_input_queue\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"ffr\",\n                    \"plugin\": \"FragmentReceiver\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"trigger_record_q\",\n                                \"name\": \"trigger_record_input_queue\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"token_q\",\n                                \"name\": \"token_output_queue\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"datawriter\",\n                    \"plugin\": \"DataWriter\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"wib_link_0\",\n                                \"name\": \"raw_input\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"time_sync_q\",\n                                \"name\": \"timesync\"\n                            },\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"data_requests_0\",\n                                \"name\": \"requests\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"data_fragments_q\",\n                                \"name\": \"fragments\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"datahandler_0\",\n                    \"plugin\": \"DataLinkHandler\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"wib_link_1\",\n                                \"name\": \"raw_input\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"time_sync_q\",\n                                \"name\": \"timesync\"\n                            },\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"data_requests_1\",\n                                \"name\": \"requests\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"data_fragments_q\",\n                                \"name\": \"fragments\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"datahandler_1\",\n                    \"plugin\": \"DataLinkHandler\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"wib_link_0\",\n                                \"name\": \"output_0\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"wib_link_1\",\n                                \"name\": \"output_1\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"fake_source\",\n                    \"plugin\": \"FakeCardReader\"\n                }\n            ],\n            \"queues\": [\n                {\n                    \"capacity\": 1000,\n                    \"inst\": \"data_fragments_q\",\n                    \"kind\": \"FollyMPMCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"data_requests_0\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"data_requests_1\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"time_sync_q\",\n                    \"kind\": \"FollyMPMCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"token_q\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"trigger_decision_copy_for_bookkeeping\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"trigger_decision_from_netq\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"trigger_decision_q\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"trigger_record_q\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100000,\n                    \"inst\": \"wib_link_0\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 100000,\n                    \"inst\": \"wib_link_1\",\n                    \"kind\": \"FollySPSCQueue\"\n                }\n            ]\n        },\n        \"entry_state\": \"NONE\",\n        \"exit_state\": \"INITIAL\",\n        \"id\": \"init\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TriggerDecisionNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TriggerDecision\",\n                        \"receiver_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-td\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqReceiver\"\n                        }\n                    },\n                    \"match\": \"ntoq_trigdec\"\n                },\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TriggerDecisionTokenNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TriggerDecisionToken\",\n                        \"sender_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-tdt\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqSender\",\n                            \"stype\": \"msgpack\"\n                        }\n                    },\n                    \"match\": \"qton_token\"\n                },\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TimeSyncNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TimeSync\",\n                        \"sender_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-ts\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqSender\",\n                            \"stype\": \"msgpack\"\n                        }\n                    },\n                    \"match\": \"qton_timesync\"\n                },\n                {\n                    \"data\": {\n                        \"map\": [\n                            {\n                                \"apa\": 0,\n                                \"link\": 0,\n                                \"queueinstance\": \"data_requests_0\"\n                            },\n                            {\n                                \"apa\": 0,\n                                \"link\": 1,\n                                \"queueinstance\": \"data_requests_1\"\n                            }\n                        ]\n                    },\n                    \"match\": \"rqg\"\n                },\n                {\n                    \"data\": {\n                        \"general_queue_timeout\": 100,\n                        \"max_timestamp_diff\": 50000000\n                    },\n                    \"match\": \"ffr\"\n                },\n                {\n                    \"data\": {\n                        \"data_storage_prescale\": 1,\n                        \"data_store_parameters\": {\n                            \"directory_path\": \".\",\n                            \"disable_unique_filename_suffix\": false,\n                            \"file_layout_parameters\": {\n                                \"apa_name_prefix\": \"APA\",\n                                \"digits_for_apa_number\": 3,\n                                \"digits_for_link_number\": 2,\n                                \"digits_for_trigger_number\": 5,\n                                \"link_name_prefix\": \"Link\",\n                                \"trigger_record_name_prefix\": \"TriggerRecord\"\n                            },\n                            \"filename_parameters\": {\n                                \"digits_for_file_index\": 4,\n                                \"digits_for_run_number\": 6,\n                                \"file_index_prefix\": \"\",\n                                \"overall_prefix\": \"swtest\",\n                                \"run_number_prefix\": \"run\"\n                            },\n                            \"max_file_size_bytes\": 1073741834,\n                            \"mode\": \"all-per-file\",\n                            \"name\": \"data_store\",\n                            \"type\": \"HDF5DataStore\"\n                        },\n                        \"initial_token_count\": 10\n                    },\n                    \"match\": \"datawriter\"\n                },\n                {\n                    \"data\": {\n                        \"data_filename\": \"./frames.bin\",\n                        \"input_limit\": 10485100,\n                        \"link_ids\": [\n                            0,\n                            1\n                        ],\n                        \"queue_timeout_ms\": 100,\n                        \"rate_khz\": 166.66666666666666,\n                        \"raw_type\": \"wib\",\n                        \"set_t0_to\": -1,\n                        \"tp_data_filename\": \"/tmp/tp_frames.bin\",\n                        \"tp_enabled\": \"false\",\n                        \"tp_rate_khz\": 66.0\n                    },\n                    \"match\": \"fake_source\"\n                },\n                {\n                    \"data\": {\n                        \"card_id\": 0,\n                        \"chunk_trailer_size\": 32,\n                        \"dma_block_size_kb\": 4,\n                        \"dma_id\": 0,\n                        \"dma_memory_size_gb\": 4,\n                        \"logical_unit\": 0,\n                        \"num_links\": 2,\n                        \"num_sources\": 1,\n                        \"numa_id\": 0\n                    },\n                    \"match\": \"flxcard_0\"\n                },\n                {\n                    \"data\": {\n                        \"card_id\": 0,\n                        \"chunk_trailer_size\": 32,\n                        \"dma_block_size_kb\": 4,\n                        \"dma_id\": 0,\n                        \"dma_memory_size_gb\": 4,\n                        \"logical_unit\": 1,\n                        \"num_links\": 0,\n                        \"num_sources\": 1,\n                        \"numa_id\": 0\n                    },\n                    \"match\": \"flxcard_1\"\n                },\n                {\n                    \"data\": {\n                        \"apa_number\": 0,\n                        \"fake_trigger_flag\": 0,\n                        \"latency_buffer_size\": 500000,\n                        \"link_number\": 0,\n                        \"pop_limit_pct\": 0.8,\n                        \"pop_size_pct\": 0.1,\n                        \"raw_type\": \"wib\",\n                        \"source_queue_timeout_ms\": 100\n                    },\n                    \"match\": \"datahandler_0\"\n                },\n                {\n                    \"data\": {\n                        \"apa_number\": 0,\n                        \"fake_trigger_flag\": 0,\n                        \"latency_buffer_size\": 500000,\n                        \"link_number\": 1,\n                        \"pop_limit_pct\": 0.8,\n                        \"pop_size_pct\": 0.1,\n                        \"raw_type\": \"wib\",\n                        \"source_queue_timeout_ms\": 100\n                    },\n                    \"match\": \"datahandler_1\"\n                }\n            ]\n        },\n        \"entry_state\": \"INITIAL\",\n        \"exit_state\": \"CONFIGURED\",\n        \"id\": \"conf\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"qton_token\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"datawriter\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"ffr\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"qton_timesync\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"datahandler_.*\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"fake_source\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"flxcard.*\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"rqg\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"ntoq_trigdec\"\n                }\n            ]\n        },\n        \"entry_state\": \"CONFIGURED\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"start\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"ntoq_trigdec\"\n                },\n                {\n                    \"match\": \"rqg\"\n                },\n                {\n                    \"match\": \"flxcard.*\"\n                },\n                {\n                    \"match\": \"fake_source\"\n                },\n                {\n                    \"match\": \"datahandler_.*\"\n                },\n                {\n                    \"match\": \"qton_timesync\"\n                },\n                {\n                    \"match\": \"ffr\"\n                },\n                {\n                    \"match\": \"datawriter\"\n                },\n                {\n                    \"match\": \"qton_token\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"CONFIGURED\",\n        \"id\": \"stop\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"pause\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"tde\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"resume\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"\"\n                }\n            ]\n        },\n        \"id\": \"scrap\"\n    }\n]"
  }
}
