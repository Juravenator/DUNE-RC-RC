{
  "meta": {
    "kind": "daq-config",
    "name": "daq-app-multiproc-emu"
  },
  "spec": {
    "template": "[\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"trigger_decision_to_netq\",\n                                \"name\": \"input\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"qton_trigdec\",\n                    \"plugin\": \"QueueToNetwork\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"token_from_netq\",\n                                \"name\": \"output\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"ntoq_token\",\n                    \"plugin\": \"NetworkToQueue\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"time_sync_from_netq\",\n                                \"name\": \"output\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"ntoq_timesync\",\n                    \"plugin\": \"NetworkToQueue\"\n                },\n                {\n                    \"data\": {\n                        \"qinfos\": [\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"time_sync_from_netq\",\n                                \"name\": \"time_sync_source\"\n                            },\n                            {\n                                \"dir\": \"input\",\n                                \"inst\": \"token_from_netq\",\n                                \"name\": \"token_source\"\n                            },\n                            {\n                                \"dir\": \"output\",\n                                \"inst\": \"trigger_decision_to_netq\",\n                                \"name\": \"trigger_decision_sink\"\n                            }\n                        ]\n                    },\n                    \"inst\": \"tde\",\n                    \"plugin\": \"TriggerDecisionEmulator\"\n                }\n            ],\n            \"queues\": [\n                {\n                    \"capacity\": 100,\n                    \"inst\": \"time_sync_from_netq\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 20,\n                    \"inst\": \"token_from_netq\",\n                    \"kind\": \"FollySPSCQueue\"\n                },\n                {\n                    \"capacity\": 20,\n                    \"inst\": \"trigger_decision_to_netq\",\n                    \"kind\": \"FollySPSCQueue\"\n                }\n            ]\n        },\n        \"entry_state\": \"NONE\",\n        \"exit_state\": \"INITIAL\",\n        \"id\": \"init\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TriggerDecisionNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TriggerDecision\",\n                        \"sender_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-td\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqSender\",\n                            \"stype\": \"msgpack\"\n                        }\n                    },\n                    \"match\": \"qton_trigdec\"\n                },\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TriggerDecisionTokenNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TriggerDecisionToken\",\n                        \"receiver_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-tdt\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqReceiver\"\n                        }\n                    },\n                    \"match\": \"ntoq_token\"\n                },\n                {\n                    \"data\": {\n                        \"msg_module_name\": \"TimeSyncNQ\",\n                        \"msg_type\": \"dunedaq::dfmessages::TimeSync\",\n                        \"receiver_config\": {\n                            \"address\": \"tcp://{{ with firstServiceAddr \\\"daq-app-multiproc-ts\\\" }}{{ .Address }}:{{ .Port }}{{ end }}\",\n                            \"ipm_plugin_type\": \"ZmqReceiver\"\n                        }\n                    },\n                    \"match\": \"ntoq_timesync\"\n                },\n                {\n                    \"data\": {\n                        \"clock_frequency_hz\": 50000000,\n                        \"links\": [\n                            0,\n                            1\n                        ],\n                        \"max_links_in_request\": 2,\n                        \"max_readout_window_ticks\": 50000,\n                        \"min_links_in_request\": 2,\n                        \"min_readout_window_ticks\": 50000,\n                        \"repeat_trigger_count\": 1,\n                        \"stop_burst_count\": 0,\n                        \"trigger_delay_ticks\": 50000000,\n                        \"trigger_interval_ticks\": 50000000,\n                        \"trigger_offset\": 0,\n                        \"trigger_window_offset\": 25000\n                    },\n                    \"match\": \"tde\"\n                }\n            ]\n        },\n        \"entry_state\": \"INITIAL\",\n        \"exit_state\": \"CONFIGURED\",\n        \"id\": \"conf\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 64000000\n                    },\n                    \"match\": \"qton_trigdec\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 64000000\n                    },\n                    \"match\": \"ntoq_token\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 64000000\n                    },\n                    \"match\": \"ntoq_timesync\"\n                },\n                {\n                    \"data\": {\n                        \"disable_data_storage\": false,\n                        \"run\": 333,\n                        \"trigger_interval_ticks\": 64000000\n                    },\n                    \"match\": \"tde\"\n                }\n            ]\n        },\n        \"entry_state\": \"CONFIGURED\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"start\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"qton_trigdec\"\n                },\n                {\n                    \"match\": \"ntoq_timesync\"\n                },\n                {\n                    \"match\": \"ntoq_token\"\n                },\n                {\n                    \"match\": \"tde\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"CONFIGURED\",\n        \"id\": \"stop\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"pause\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"data\": {\n                        \"trigger_interval_ticks\": 50000000\n                    },\n                    \"match\": \"tde\"\n                }\n            ]\n        },\n        \"entry_state\": \"RUNNING\",\n        \"exit_state\": \"RUNNING\",\n        \"id\": \"resume\"\n    },\n    {\n        \"data\": {\n            \"modules\": [\n                {\n                    \"match\": \"\"\n                }\n            ]\n        },\n        \"id\": \"scrap\"\n    }\n]"
  }
}
