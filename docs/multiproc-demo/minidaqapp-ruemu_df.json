[
    {
        "data": {
            "modules": [
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "output",
                                "inst": "trigger_decision_from_netq",
                                "name": "output"
                            }
                        ]
                    },
                    "inst": "ntoq_trigdec",
                    "plugin": "NetworkToQueue"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "token_q",
                                "name": "input"
                            }
                        ]
                    },
                    "inst": "qton_token",
                    "plugin": "QueueToNetwork"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "time_sync_q",
                                "name": "input"
                            }
                        ]
                    },
                    "inst": "qton_timesync",
                    "plugin": "QueueToNetwork"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "trigger_decision_from_netq",
                                "name": "trigger_decision_input_queue"
                            },
                            {
                                "dir": "output",
                                "inst": "trigger_decision_copy_for_bookkeeping",
                                "name": "trigger_decision_for_event_building"
                            },
                            {
                                "dir": "output",
                                "inst": "data_requests_0",
                                "name": "data_request_0_output_queue"
                            },
                            {
                                "dir": "output",
                                "inst": "data_requests_1",
                                "name": "data_request_1_output_queue"
                            }
                        ]
                    },
                    "inst": "rqg",
                    "plugin": "RequestGenerator"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "trigger_decision_copy_for_bookkeeping",
                                "name": "trigger_decision_input_queue"
                            },
                            {
                                "dir": "output",
                                "inst": "trigger_record_q",
                                "name": "trigger_record_output_queue"
                            },
                            {
                                "dir": "input",
                                "inst": "data_fragments_q",
                                "name": "data_fragment_input_queue"
                            }
                        ]
                    },
                    "inst": "ffr",
                    "plugin": "FragmentReceiver"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "trigger_record_q",
                                "name": "trigger_record_input_queue"
                            },
                            {
                                "dir": "output",
                                "inst": "token_q",
                                "name": "token_output_queue"
                            }
                        ]
                    },
                    "inst": "datawriter",
                    "plugin": "DataWriter"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "wib_link_0",
                                "name": "raw_input"
                            },
                            {
                                "dir": "output",
                                "inst": "time_sync_q",
                                "name": "timesync"
                            },
                            {
                                "dir": "input",
                                "inst": "data_requests_0",
                                "name": "requests"
                            },
                            {
                                "dir": "output",
                                "inst": "data_fragments_q",
                                "name": "fragments"
                            }
                        ]
                    },
                    "inst": "datahandler_0",
                    "plugin": "DataLinkHandler"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "input",
                                "inst": "wib_link_1",
                                "name": "raw_input"
                            },
                            {
                                "dir": "output",
                                "inst": "time_sync_q",
                                "name": "timesync"
                            },
                            {
                                "dir": "input",
                                "inst": "data_requests_1",
                                "name": "requests"
                            },
                            {
                                "dir": "output",
                                "inst": "data_fragments_q",
                                "name": "fragments"
                            }
                        ]
                    },
                    "inst": "datahandler_1",
                    "plugin": "DataLinkHandler"
                },
                {
                    "data": {
                        "qinfos": [
                            {
                                "dir": "output",
                                "inst": "wib_link_0",
                                "name": "output_0"
                            },
                            {
                                "dir": "output",
                                "inst": "wib_link_1",
                                "name": "output_1"
                            }
                        ]
                    },
                    "inst": "fake_source",
                    "plugin": "FakeCardReader"
                }
            ],
            "queues": [
                {
                    "capacity": 1000,
                    "inst": "data_fragments_q",
                    "kind": "FollyMPMCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "data_requests_0",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "data_requests_1",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "time_sync_q",
                    "kind": "FollyMPMCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "token_q",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "trigger_decision_copy_for_bookkeeping",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "trigger_decision_from_netq",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "trigger_decision_q",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100,
                    "inst": "trigger_record_q",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100000,
                    "inst": "wib_link_0",
                    "kind": "FollySPSCQueue"
                },
                {
                    "capacity": 100000,
                    "inst": "wib_link_1",
                    "kind": "FollySPSCQueue"
                }
            ]
        },
        "entry_state": "NONE",
        "exit_state": "INITIAL",
        "id": "init"
    },
    {
        "data": {
            "modules": [
                {
                    "data": {
                        "msg_module_name": "TriggerDecisionNQ",
                        "msg_type": "dunedaq::dfmessages::TriggerDecision",
                        "receiver_config": {
                            "address": "tcp://{{ with firstServiceAddr \"daq-app-multiproc-td\" }}{{ .Address }}:{{ .Port }}{{ end }}",
                            "ipm_plugin_type": "ZmqReceiver"
                        }
                    },
                    "match": "ntoq_trigdec"
                },
                {
                    "data": {
                        "msg_module_name": "TriggerDecisionTokenNQ",
                        "msg_type": "dunedaq::dfmessages::TriggerDecisionToken",
                        "sender_config": {
                            "address": "tcp://{{ with firstServiceAddr \"daq-app-multiproc-tdt\" }}{{ .Address }}:{{ .Port }}{{ end }}",
                            "ipm_plugin_type": "ZmqSender",
                            "stype": "msgpack"
                        }
                    },
                    "match": "qton_token"
                },
                {
                    "data": {
                        "msg_module_name": "TimeSyncNQ",
                        "msg_type": "dunedaq::dfmessages::TimeSync",
                        "sender_config": {
                            "address": "tcp://{{ with firstServiceAddr \"daq-app-multiproc-ts\" }}{{ .Address }}:{{ .Port }}{{ end }}",
                            "ipm_plugin_type": "ZmqSender",
                            "stype": "msgpack"
                        }
                    },
                    "match": "qton_timesync"
                },
                {
                    "data": {
                        "map": [
                            {
                                "apa": 0,
                                "link": 0,
                                "queueinstance": "data_requests_0"
                            },
                            {
                                "apa": 0,
                                "link": 1,
                                "queueinstance": "data_requests_1"
                            }
                        ]
                    },
                    "match": "rqg"
                },
                {
                    "data": {
                        "general_queue_timeout": 100,
                        "max_timestamp_diff": 50000000
                    },
                    "match": "ffr"
                },
                {
                    "data": {
                        "data_storage_prescale": 1,
                        "data_store_parameters": {
                            "directory_path": ".",
                            "disable_unique_filename_suffix": false,
                            "file_layout_parameters": {
                                "apa_name_prefix": "APA",
                                "digits_for_apa_number": 3,
                                "digits_for_link_number": 2,
                                "digits_for_trigger_number": 5,
                                "link_name_prefix": "Link",
                                "trigger_record_name_prefix": "TriggerRecord"
                            },
                            "filename_parameters": {
                                "digits_for_file_index": 4,
                                "digits_for_run_number": 6,
                                "file_index_prefix": "",
                                "overall_prefix": "swtest",
                                "run_number_prefix": "run"
                            },
                            "max_file_size_bytes": 1073741824,
                            "mode": "all-per-file",
                            "name": "data_store",
                            "type": "HDF5DataStore"
                        },
                        "initial_token_count": 10
                    },
                    "match": "datawriter"
                },
                {
                    "data": {
                        "data_filename": "./frames.bin",
                        "input_limit": 10485100,
                        "link_ids": [
                            0,
                            1
                        ],
                        "queue_timeout_ms": 100,
                        "rate_khz": 166.66666666666666,
                        "raw_type": "wib",
                        "set_t0_to": -1,
                        "tp_data_filename": "/tmp/tp_frames.bin",
                        "tp_enabled": "false",
                        "tp_rate_khz": 66.0
                    },
                    "match": "fake_source"
                },
                {
                    "data": {
                        "card_id": 0,
                        "chunk_trailer_size": 32,
                        "dma_block_size_kb": 4,
                        "dma_id": 0,
                        "dma_memory_size_gb": 4,
                        "logical_unit": 0,
                        "num_links": 2,
                        "num_sources": 1,
                        "numa_id": 0
                    },
                    "match": "flxcard_0"
                },
                {
                    "data": {
                        "card_id": 0,
                        "chunk_trailer_size": 32,
                        "dma_block_size_kb": 4,
                        "dma_id": 0,
                        "dma_memory_size_gb": 4,
                        "logical_unit": 1,
                        "num_links": 0,
                        "num_sources": 1,
                        "numa_id": 0
                    },
                    "match": "flxcard_1"
                },
                {
                    "data": {
                        "apa_number": 0,
                        "emulator_mode": false,
                        "fake_trigger_flag": 0,
                        "latency_buffer_size": 500000,
                        "link_number": 0,
                        "pop_limit_pct": 0.8,
                        "pop_size_pct": 0.1,
                        "raw_type": "wib",
                        "source_queue_timeout_ms": 100
                    },
                    "match": "datahandler_0"
                },
                {
                    "data": {
                        "apa_number": 0,
                        "emulator_mode": false,
                        "fake_trigger_flag": 0,
                        "latency_buffer_size": 500000,
                        "link_number": 1,
                        "pop_limit_pct": 0.8,
                        "pop_size_pct": 0.1,
                        "raw_type": "wib",
                        "source_queue_timeout_ms": 100
                    },
                    "match": "datahandler_1"
                }
            ]
        },
        "entry_state": "INITIAL",
        "exit_state": "CONFIGURED",
        "id": "conf"
    },
    {
        "data": {
            "modules": [
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "qton_token"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "datawriter"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "ffr"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "qton_timesync"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "datahandler_.*"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "fake_source"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "flxcard.*"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "rqg"
                },
                {
                    "data": {
                        "disable_data_storage": false,
                        "run": 333,
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "ntoq_trigdec"
                }
            ]
        },
        "entry_state": "CONFIGURED",
        "exit_state": "RUNNING",
        "id": "start"
    },
    {
        "data": {
            "modules": [
                {
                    "match": "ntoq_trigdec"
                },
                {
                    "match": "rqg"
                },
                {
                    "match": "flxcard.*"
                },
                {
                    "match": "fake_source"
                },
                {
                    "match": "datahandler_.*"
                },
                {
                    "match": "qton_timesync"
                },
                {
                    "match": "ffr"
                },
                {
                    "match": "datawriter"
                },
                {
                    "match": "qton_token"
                }
            ]
        },
        "entry_state": "RUNNING",
        "exit_state": "CONFIGURED",
        "id": "stop"
    },
    {
        "data": {
            "modules": [
                {
                    "match": ""
                }
            ]
        },
        "entry_state": "RUNNING",
        "exit_state": "RUNNING",
        "id": "pause"
    },
    {
        "data": {
            "modules": [
                {
                    "data": {
                        "trigger_interval_ticks": 50000000
                    },
                    "match": "tde"
                }
            ]
        },
        "entry_state": "RUNNING",
        "exit_state": "RUNNING",
        "id": "resume"
    },
    {
        "data": {
            "modules": [
                {
                    "match": ""
                }
            ]
        },
        "id": "scrap"
    }
]